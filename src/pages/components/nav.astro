---
import { navLinks } from "../../constants/navLinks";

const currentPath = Astro.url.pathname;
---

<nav class="hidden md:block">
  <ul
    class="flex items-center justify-center rounded-full bg-white/90 px-3 py-2 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10"
  >
    {
      navLinks.map((link) => {
        const isActive = currentPath.startsWith(link.href);

        return (
          <li>
            <a
              href={link.href}
              class={`relative px-3 py-2 transition hover:text-teal-500  dark:hover:text-teal-400 ${
                isActive && "text-teal-500 dark:text-teal-400"
              }`}
            >
              {link.title}
              {isActive && (
                <span
                  transition:name="active-nav-highlight"
                  class="absolute inset-x-1 -bottom-[5px] h-px bg-gradient-to-r from-teal-500/0 via-teal-500/40 to-teal-500/0 dark:from-teal-400/0 dark:via-teal-400/40 dark:to-teal-400/0"
                />
              )}
            </a>
          </li>
        );
      })
    }
  </ul>
</nav>

<button
  transition:name="responsive-nav-button"
  class="group flex items-center rounded-full bg-white/90 px-4 py-2 text-sm font-medium text-zinc-800 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur dark:bg-zinc-800/90 dark:text-zinc-200 dark:ring-white/10 dark:hover:ring-white/20 md:hidden"
  id="primary-nav-button"
  >Menu<svg
    xmlns="http://www.w3.org/2000/svg"
    fill="none"
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke="currentColor"
    class="ml-3 h-auto w-2 stroke-zinc-500 group-hover:stroke-zinc-700 dark:group-hover:stroke-zinc-400"
  >
    <path
      stroke-linecap="round"
      stroke-linejoin="round"
      d="M19.5 8.25l-7.5 7.5-7.5-7.5"></path>
  </svg>
</button>

<dialog
  id="primary-nav-dialog"
  class="backdrop:bg-zinc-800/40 backdrop:backdrop-blur-sm backdrop:dark:bg-black/80"
>
  <div
    id="primary-nav-content"
    class="fixed inset-x-4 top-8 rounded-3xl bg-white p-8 ring-1 ring-zinc-900/5 dark:bg-zinc-900 dark:ring-zinc-800"
  >
    <div class="flex flex-row items-center justify-between">
      <h2 class="text-sm font-medium text-zinc-600 dark:text-zinc-400">
        Navigation
      </h2>
      <form method="dialog">
        <button>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            fill="none"
            viewBox="0 0 24 24"
            stroke-width="1.5"
            stroke="currentColor"
            class="h-6 w-6 text-zinc-500 dark:text-zinc-400"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </form>
    </div>
    <nav class="mt-4">
      <ul
        class="divide-y divide-zinc-100 text-base text-zinc-800 dark:divide-zinc-100/5 dark:text-zinc-300"
      >
        {
          navLinks.map((link) => {
            const isActive = currentPath.startsWith(link.href);

            return (
              <li>
                <a
                  href={link.href}
                  class={`block py-2 hover:text-teal-500 dark:hover:text-teal-400 ${
                    isActive && "text-teal-500 dark:text-teal-400"
                  }`}
                >
                  {link.title}
                </a>
              </li>
            );
          })
        }
      </ul>
    </nav>
  </div>
</dialog>

<script>
  document.addEventListener("astro:page-load", () => {
    const dialog: HTMLDialogElement | null = document.querySelector(
      "#primary-nav-dialog",
    );
    document
      .querySelector("#primary-nav-button")
      ?.addEventListener("click", () => dialog?.showModal());

    dialog?.addEventListener("click", (event) => {
      const isInDialog = (event.target as Element).closest(
        "#primary-nav-content",
      );

      if (!isInDialog) {
        dialog.close();
      }
    });
  });
</script>
