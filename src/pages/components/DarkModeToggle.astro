---
import { fade } from "astro:transitions";
import { TRANSITION_NAMES } from "../../constants/transition-names";
---

<button
  id="dev-theme-mode-toggle"
  class="group rounded-full bg-white/90 px-3 py-2 shadow-lg shadow-zinc-800/5 ring-1 ring-zinc-900/5 backdrop-blur transition dark:bg-zinc-800/90 dark:ring-white/10 dark:hover:ring-white/20"
  transition:name={TRANSITION_NAMES.darkModeToggle}
  transition:animate={fade({ duration: 500 })}
>
  <svg
    viewBox="0 0 24 24"
    stroke-width="1.5"
    stroke-linecap="round"
    stroke-linejoin="round"
    class="h-6 w-6 fill-zinc-100 stroke-zinc-500 transition group-hover:fill-zinc-200 group-hover:stroke-zinc-700 dark:hidden [@media(prefers-color-scheme:dark)]:fill-teal-50 [@media(prefers-color-scheme:dark)]:stroke-teal-500 [@media(prefers-color-scheme:dark)]:group-hover:fill-teal-50 [@media(prefers-color-scheme:dark)]:group-hover:stroke-teal-600"
    ><path
      d="M8 12.25A4.25 4.25 0 0 1 12.25 8v0a4.25 4.25 0 0 1 4.25 4.25v0a4.25 4.25 0 0 1-4.25 4.25v0A4.25 4.25 0 0 1 8 12.25v0Z"
    ></path><path
      d="M12.25 3v1.5M21.5 12.25H20M18.791 18.791l-1.06-1.06M18.791 5.709l-1.06 1.06M12.25 20v1.5M4.5 12.25H3M6.77 6.77 5.709 5.709M6.77 17.73l-1.061 1.061"
      fill="none"></path>
  </svg><svg
    viewBox="0 0 24 24"
    class="hidden h-6 w-6 fill-zinc-700 stroke-zinc-500 transition dark:block [@media(prefers-color-scheme:dark)]:group-hover:stroke-zinc-400 [@media_not_(prefers-color-scheme:dark)]:fill-teal-400/10 [@media_not_(prefers-color-scheme:dark)]:stroke-teal-500"
    ><path
      d="M17.25 16.22a6.937 6.937 0 0 1-9.47-9.47 7.451 7.451 0 1 0 9.47 9.47ZM12.75 7C17 7 17 2.75 17 2.75S17 7 21.25 7C17 7 17 11.25 17 11.25S17 7 12.75 7Z"
      stroke-width="1.5"
      stroke-linecap="round"
      stroke-linejoin="round"></path>
  </svg>
</button>

<script type="text/javascript" data-astro-rerun is:inline>
  (() => {
    const $html = document.querySelector("html");
    const themeKey = "@page/theme";

    const theme = (() => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem(themeKey)
      ) {
        return localStorage.getItem(themeKey);
      }
      if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        return "dark";
      }
      return "light";
    })();

    if (theme === "light") {
      $html.classList.remove("dark");
    } else {
      $html.classList.add("dark");
    }

    window.localStorage.setItem(themeKey, theme);

    const handleToggleClick = () => {
      const element = $html;
      element.classList.toggle("dark");

      const isDark = element.classList.contains("dark");
      localStorage.setItem(themeKey, isDark ? "dark" : "light");
    };

    document
      .getElementById("dev-theme-mode-toggle")
      .addEventListener("click", handleToggleClick);
  })();
</script>
